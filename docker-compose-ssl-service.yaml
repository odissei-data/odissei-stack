version: '3.7'

services:
  postgresql:
    container_name: postgresql
    image: library/postgres:10.13
    restart: unless-stopped
    env_file: .env.prod
    environment:
      - "LC_ALL"
      - "POSTGRES_DB=dataverse"
      - "POSTGRES_USER=dataverse"
      - "POSTGRES_PASSWORD=changeme"
      - "POSTGRES_PORT=5432"
    volumes:
      - ./data/postgresql_data:/var/lib/postgresql/data
    networks:
      - traefik-public

  dbgui:
    container_name: dbgui
    image: adminer
    depends_on:
      - postgresql
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.dbgui.rule=Host(`dbgui.${HOSTNAME}`)"
      - "traefik.http.routers.dbgui.middlewares=dbgui@docker"
      - "traefik.http.routers.dbgui.tls.certresolver=myresolver"
      - "traefik.http.services.dbgui.loadbalancer.server.port=8080"
      - "traefik.http.routers.dbgui.entrypoints=https"
      # - "traefik.http.middlewares.dbgui.basicauth.users=user:$$2y$$05$$zig/c1pe6XXAJXFBRzx6oeshIa7d3GuZuKaRTjegGbyCykZkXjYU6"
      - "traefik.http.middlewares.dbgui.basicauth.users=user:$$2y$$05$$zig/c1pe6XXAJXFBRzx6oeshIa7d3GuZuKaRTjegGbyCykZkXjYU6,temp_user:$$apr1$$3vnhRsEm$$SqsuTm6w1NMfR7.KyImmB/"
    networks:
      - traefik-public

  solr:
    container_name: solr
    image: iqss/solr-k8s
    volumes:
      - ./data/solr_data:/opt/solr/server/solr/collection1/data
    environment:
      - "SOLR_OPTS=-Dlog4j2.formatMsgNoLookups=true"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.solr.rule=Host(`solr.${HOSTNAME}`)"
      - "traefik.http.services.solr.loadbalancer.server.port=8983"
      - "traefik.http.routers.solr.tls.certresolver=myresolver"
      - "traefik.http.routers.solr.entrypoints=https"
      - "traefik.http.routers.solr.middlewares=solr@docker"
      # - "traefik.http.middlewares.solr.basicauth.users=user:$$2y$$05$$zig/c1pe6XXAJXFBRzx6oeshIa7d3GuZuKaRTjegGbyCykZkXjYU6"
      - "traefik.http.middlewares.solr.basicauth.users=user:$$2y$$05$$zig/c1pe6XXAJXFBRzx6oeshIa7d3GuZuKaRTjegGbyCykZkXjYU6,temp_user:$$apr1$$3vnhRsEm$$SqsuTm6w1NMfR7.KyImmB/"
    networks:
      - traefik-public

  dataverse:
    container_name: dataverse
    user:
      "root"
    image: "coronawhy/dataverse:5.9"
    build:
      context: .
      dockerfile: ./docker/dataverse-k8s/payara/Dockerfile
    depends_on:
      - postgresql
      - solr
    env_file: .env.prod
    volumes:
      - ./data/dataverse_data:/data
      - type: bind
        source: ./personas/docker-compose/secrets
        target: /secrets
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.dataverse.rule=Host(`portal.${HOSTNAME}`)"
      - "traefik.http.services.dataverse.loadbalancer.server.port=8080"
      - "traefik.http.routers.dataverse.tls.certresolver=myresolver"
      - "traefik.http.routers.dataverse.entrypoints=https"
      - "traefik.http.routers.dataverse.middlewares=dataverse@docker"
      # - "traefik.http.middlewares.dataverse.basicauth.users=user:$$2y$$05$$zig/c1pe6XXAJXFBRzx6oeshIa7d3GuZuKaRTjegGbyCykZkXjYU6"
      - "traefik.http.middlewares.dataverse.basicauth.users=user:$$2y$$05$$zig/c1pe6XXAJXFBRzx6oeshIa7d3GuZuKaRTjegGbyCykZkXjYU6,temp_user:$$apr1$$3vnhRsEm$$SqsuTm6w1NMfR7.KyImmB/"
    networks:
      - traefik-public

  contact-web:
    image: nginx:latest
    container_name: contact-web
    volumes:
      - ./index.html:/usr/share/nginx/html/index.html
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.cbs-contact.rule=Host(`cbs-contact.${HOSTNAME}`)"
      - "traefik.http.services.cbs-contact.loadbalancer.server.port=80"
      - "traefik.http.routers.cbs-contact.tls.certresolver=myresolver"
      - "traefik.http.routers.cbs-contact.entrypoints=https"
      - "traefik.http.routers.cbs-contact.middlewares=cbs-contact@docker"
      # - "traefik.http.middlewares.cbs-contact.basicauth.users=user:$$2y$$05$$zig/c1pe6XXAJXFBRzx6oeshIa7d3GuZuKaRTjegGbyCykZkXjYU6"
      - "traefik.http.middlewares.cbs-contact.basicauth.users=user:$$2y$$05$$zig/c1pe6XXAJXFBRzx6oeshIa7d3GuZuKaRTjegGbyCykZkXjYU6,temp_user:$$apr1$$3vnhRsEm$$SqsuTm6w1NMfR7.KyImmB/"
    networks:
      - traefik-public

  fuseki:
    networks:
      - traefik-public
    image: stain/jena-fuseki
    container_name: skosmos-fuseki
    environment:
      - ADMIN_PASSWORD=admin
      - JVM_ARGS=-Xmx6g
      #--config=/data/skosmos.ttl
      - FUSEKI_DATASET_1=skosmos
      - FUSEKI_ADDITIONAL_ARGS=/data/jena-text.jar
    ports:
      - 3030:3030
    # You can uncomment the line below to have a local volume bound onto the container, or
    # visit https://hub.docker.com/r/stain/jena-fuseki/ for other alternatives
    #volumes:
    #    - ./config/config.ttl:/fuseki/config.ttl
    #    - ./config/fuseki-server:/jena-fuseki/fuseki-server
    #    - ./data/fuseki-data:/fuseki/databases
    #    - ./data/fuseki-input:/data
    volumes:
      - type: bind
        source: ./Skosmos/dockerfiles/config/skosmos.ttl
        target: /fuseki/configuration/skosmos.ttl
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.fuseki.rule=Host(`fuseki.${HOSTNAME}`)"
      - "traefik.http.services.fuseki.loadbalancer.server.port=3030"
      - "traefik.http.routers.fuseki.tls=true"
      - "traefik.http.routers.fuseki.tls.certresolver=myresolver"

  fuseki-cache:
    networks:
      - traefik-public
    container_name: skosmos-fuseki-cache
    hostname: fuseki-cache
    image: varnish
    ports:
      - 9031:80
    volumes:
      - type: bind
        source: ./Skosmos/dockerfiles/config/varnish-default.vcl
        target: /etc/varnish/default.vcl

  skosmos:
    networks:
      - traefik-public
    container_name: skosmos
    build:
      context: ./Skosmos
      dockerfile: dockerfiles/Dockerfile.ubuntu
        #volumes:
              #  - .:/var/www/html
    volumes:
      - type: bind
        source: ./skosmos_config/skosmos.ttl
        target: /var/www/html/config.ttl
    ports:
      - 8000:80
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.skosmos.rule=Host(`skosmos.${HOSTNAME}`)"
      - "traefik.http.services.skosmos.loadbalancer.server.port=80"
      - "traefik.http.routers.skosmos.tls=true"
      - "traefik.http.routers.skosmos.tls.certresolver=myresolver"
    depends_on:
      - fuseki

networks:
  traefik-public:
    external: true
