version: '3.7'

services:
  postgresql:
    container_name: postgresql
    image: library/postgres:10.13
    restart: unless-stopped
    env_file: .env.prod
    environment:
      - "LC_ALL"
      - "POSTGRES_DB=dataverse"
      - "POSTGRES_USER=dataverse"
      - "POSTGRES_PASSWORD=changeme"
      - "POSTGRES_PORT=5432"
    volumes:
      - ./data/postgresql_data:/var/lib/postgresql/data
    networks:
      - traefik-public

  dbgui:
    container_name: dbgui
    image: adminer
    depends_on:
      - postgresql
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.dbgui.rule=Host(`dbgui.${HOSTNAME}`)"
      - "traefik.http.routers.dbgui.middlewares=dbgui@docker"
      - "traefik.http.routers.dbgui.tls.certresolver=myresolver"
      - "traefik.http.services.dbgui.loadbalancer.server.port=8080"
      - "traefik.http.routers.dbgui.entrypoints=https"
      # - "traefik.http.middlewares.dbgui.basicauth.users=user:$$2y$$05$$zig/c1pe6XXAJXFBRzx6oeshIa7d3GuZuKaRTjegGbyCykZkXjYU6"
      - "traefik.http.middlewares.dbgui.basicauth.users=user:$$2y$$05$$zig/c1pe6XXAJXFBRzx6oeshIa7d3GuZuKaRTjegGbyCykZkXjYU6,temp_user:$$apr1$$3vnhRsEm$$SqsuTm6w1NMfR7.KyImmB/"
    networks:
      - traefik-public

  solr:
    container_name: solr
    image: iqss/solr-k8s
    volumes:
      - ./data/solr_data:/opt/solr/server/solr/collection1/data
    environment:
      - "SOLR_OPTS=-Dlog4j2.formatMsgNoLookups=true"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.solr.rule=Host(`solr.${HOSTNAME}`)"
      - "traefik.http.services.solr.loadbalancer.server.port=8983"
      - "traefik.http.routers.solr.tls.certresolver=myresolver"
      - "traefik.http.routers.solr.entrypoints=https"
      - "traefik.http.routers.solr.middlewares=solr@docker"
      # - "traefik.http.middlewares.solr.basicauth.users=user:$$2y$$05$$zig/c1pe6XXAJXFBRzx6oeshIa7d3GuZuKaRTjegGbyCykZkXjYU6"
      - "traefik.http.middlewares.solr.basicauth.users=user:$$2y$$05$$zig/c1pe6XXAJXFBRzx6oeshIa7d3GuZuKaRTjegGbyCykZkXjYU6,temp_user:$$apr1$$3vnhRsEm$$SqsuTm6w1NMfR7.KyImmB/"
    networks:
      - traefik-public

  dataverse:
    container_name: dataverse
    user:
      "root"
    build:
      context: .
      dockerfile: ./docker/dataverse-k8s/payara/Dockerfile
    depends_on:
      - postgresql
      - solr
    env_file: .env.prod
    volumes:
      - ./data/dataverse_data:/data
      - type: bind
        source: ./personas/docker-compose/secrets
        target: /secrets
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.dataverse.rule=Host(`portal.${HOSTNAME}`)"
      - "traefik.http.services.dataverse.loadbalancer.server.port=8080"
      - "traefik.http.routers.dataverse.tls.certresolver=myresolver"
      - "traefik.http.routers.dataverse.entrypoints=https"
      # - "traefik.http.middlewares.dataverse.basicauth.users=user:$$2y$$05$$zig/c1pe6XXAJXFBRzx6oeshIa7d3GuZuKaRTjegGbyCykZkXjYU6"
      - "traefik.http.middlewares.dataverse.basicauth.users=user:$$2y$$05$$zig/c1pe6XXAJXFBRzx6oeshIa7d3GuZuKaRTjegGbyCykZkXjYU6,temp_user:$$apr1$$3vnhRsEm$$SqsuTm6w1NMfR7.KyImmB/"
    networks:
      - traefik-public

  contact-web:
    image: nginx:latest
    container_name: contact-web
    volumes:
      - ./index.html:/usr/share/nginx/html/index.html
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.cbs-contact.rule=Host(`cbs-contact.${HOSTNAME}`)"
      - "traefik.http.services.cbs-contact.loadbalancer.server.port=80"
      - "traefik.http.routers.cbs-contact.tls.certresolver=myresolver"
      - "traefik.http.routers.cbs-contact.entrypoints=https"
      - "traefik.http.routers.cbs-contact.middlewares=cbs-contact@docker"
      # - "traefik.http.middlewares.cbs-contact.basicauth.users=user:$$2y$$05$$zig/c1pe6XXAJXFBRzx6oeshIa7d3GuZuKaRTjegGbyCykZkXjYU6"
      - "traefik.http.middlewares.cbs-contact.basicauth.users=user:$$2y$$05$$zig/c1pe6XXAJXFBRzx6oeshIa7d3GuZuKaRTjegGbyCykZkXjYU6,temp_user:$$apr1$$3vnhRsEm$$SqsuTm6w1NMfR7.KyImmB/"
    networks:
      - traefik-public

networks:
  traefik-public:
    external: true
